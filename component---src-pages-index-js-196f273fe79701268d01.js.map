{"version":3,"file":"component---src-pages-index-js-196f273fe79701268d01.js","mappings":"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","sources":["webpack://greg-obis-portfolio/./src/components/ContactMe/ContactMe.js","webpack://greg-obis-portfolio/./src/components/FeaturedProjects/FeaturedProjects.js","webpack://greg-obis-portfolio/./src/components/HomepageHero/HomepageHero.js","webpack://greg-obis-portfolio/./src/components/LazyLoadingEmbed/LazyLoadingEmbed.module.css","webpack://greg-obis-portfolio/./src/components/LazyLoadingEmbed/LazyLoadingEmbed.js","webpack://greg-obis-portfolio/./src/components/ProjectPreview/ProjectPreview.js","webpack://greg-obis-portfolio/./src/components/ProjectPreview/ProjectPreview.module.css","webpack://greg-obis-portfolio/./src/pages/index.js","webpack://greg-obis-portfolio/./node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nconst ContactMe = () => {\n    return (\n        <Container fluid className=\"py-5 kournikova--bg\">\n            <Container className=\"my-5\">  \n                <h3 className=\"text-center\">Contact Me</h3> \n                <Row className=\"py-4\">\n                    <Col lg=\"6\" className=\"mx-auto\">\n                        <p className=\"text-center\">I'll do whatever you want me to do.</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"6\" lg=\"3\" className=\"mx-auto\">\n                        <Button bsPrefix=\"custom-btn\" className=\"btn aquamarine--btn w-100\" href=\"/contact\">Contact me</Button>\n                    </Col>\n                </Row>           \n            </Container>\n        </Container>  \n\n    )\n}\nexport default ContactMe","import React from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ProjectPreview from '../ProjectPreview'\n\n\nconst FeaturedProjects = ({ projects }) => {\n    return (\n        <Container fluid className=\"py-5\">\n            <Container className=\"my-5\">\n                <h2 className=\"text-center\">Projects</h2>        \n                <Row className=\"py-4\">\n                    {projects.slice(0, 3).map(({ node }) => {\n                        return (\n                            <ProjectPreview project={node}/>\n                        )\n                    })}\n                </Row>\n                <Row>\n                    <Col md=\"6\" lg=\"3\" className=\"mx-auto\">\n                        <Button bsPrefix=\"custom-btn\" className=\"btn aquamarine--btn w-100\" href=\"/projects\" aria-label=\"See more projects\">See more projects</Button>\n                    </Col>\n                </Row>\n            </Container>\n        </Container>\n    )\n}\nexport default FeaturedProjects","import React from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst HomepageHero = ({ data }) => {\n  return (\n    <Container fluid className=\"py-5 blue--bg\">\n      <Container className=\"my-5\">\n        <Row>\n          <Col>\n            <h1 className=\"text-center\">{data.name}</h1>  \n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"8\" lg=\"6\" className=\"mx-auto\">\n            <p>{data.intro.intro}</p>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  )\n}\nexport default HomepageHero","// extracted by mini-css-extract-plugin\nexport var iframe = \"LazyLoadingEmbed-module--iframe--93017\";","import React, { useState, useEffect, useRef } from 'react'\nimport * as styles from \"./LazyLoadingEmbed.module.css\"\n\nconst LazyLoadingEmbed = (embed, album) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const iframeRef = useRef(null);\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    setIsVisible(true);\n                    observer.disconnect(); // Stop observing once visible\n                }\n            },\n            { threshold: 0.1 } // Trigger when 10% of the component is visible\n        );\n\n        if (iframeRef.current) {\n            observer.observe(iframeRef.current);\n        }\n\n        return () => {\n            if (iframeRef.current) {\n                observer.unobserve(iframeRef.current);\n            }\n        };\n    }, []);\n\n    const embedSplit = embed.embed.embed.split(' ');\n    const src = embedSplit.find((string) => {\n        return string.startsWith(\"src\")\n    })\n    const srcSplit = src.split(\"/\")\n    const albumId = srcSplit.find((string) => {\n        return string.startsWith(\"album=\")\n    })\n    const formattedSrcUrl = `https://bandcamp.com/EmbeddedPlayer/${albumId}/size=large/bgcol=ffffff/linkcol=0687f5/minimal=true/transparent=true/`\n    const href = embedSplit.find((string) => {\n        return string.startsWith(\"href\")\n    })\n\n    return (\n        <div ref={iframeRef} className={styles.lazyEmbedContainer}>\n            {isVisible && (\n                <iframe\n                    title={`${album} bandcamp embed`}\n                    width=\"170px\"\n                    height=\"170px\"\n                    className={styles.iframe}\n                    src={formattedSrcUrl}\n                    seamless\n                />\n            )}\n        </div>\n    )\n}\n\nexport default LazyLoadingEmbed\n","import React from 'react'\nimport LazyLoadingEmbed from '../LazyLoadingEmbed'\nimport Col from \"react-bootstrap/Col\"\nimport * as styles from \"./ProjectPreview.module.css\"\n\nconst ProjectPreview = ({ project }) => {\n  const {band, album, label, year, embed, categories}= project\n  \nreturn (\n  <Col sm=\"6\" md=\"4\" className=\"py-4 text-center d-flex flex-column justify-content-between align-items-center mx-auto\">\n  <div className=\"my-3\">\n    <span className={styles.bandName}>{ band }</span>\n    <span className={styles.albumName}>{ album }</span>\n    <span className={styles.categories}>\n    {categories.map((category, index)=> \n      <span key={index}>\n        <span className={`darken-${category.color.name}--text`}>\n          {category.title}\n        </span>\n        <span>{index !== categories.length - 1 ? ' | ' : ''}</span>\n      </span>\n    )}\n    </span>\n  </div>\n  <LazyLoadingEmbed embed={embed} album={album}/>\n  <div className=\"my-3\">\n    <span className={styles.label}>{ label }</span>\n    <span className={styles.year}>{ year }</span>\n  </div>\n</Col>\n)}\n\nexport default ProjectPreview","// extracted by mini-css-extract-plugin\nexport var albumName = \"ProjectPreview-module--albumName--0211c\";\nexport var bandName = \"ProjectPreview-module--bandName--ccdad\";\nexport var categories = \"ProjectPreview-module--categories--b4236\";\nexport var iframe = \"ProjectPreview-module--iframe--40e77\";\nexport var label = \"ProjectPreview-module--label--71193\";\nexport var year = \"ProjectPreview-module--year--b01e2\";","import React from 'react'\nimport { graphql } from 'gatsby'\nimport HomepageHero from '../components/HomepageHero'\nimport Layout from '../components/Layout'\nimport FeaturedProjects from '../components/FeaturedProjects'\nimport ContactMe from '../components/ContactMe'\n\nconst Homepage = ({location, data}) => {\n  const siteTitle = data?.site.siteMetadata.title\n  const projects = data?.allContentfulProject.edges\n  const [greg] = data?.allContentfulMe.edges\n\n  return (\n    <Layout location={location.pathname} siteTitle={siteTitle}>\n      <HomepageHero data={greg.node} />\n      <FeaturedProjects projects={projects}/>\n      <ContactMe />\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const pageQuery = await  graphql`\n  query HomeQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulPage(filter: {addToNav: {eq: true}}) {\n      nodes {\n        tItle\n        slug\n      }\n    }\n    allContentfulProject(sort: {year: DESC}, filter: {featured: {eq: true}}) {\n      edges {\n        node {\n          album\n          band\n          featured\n          categories {\n            title\n            color {\n              name\n            }\n          }\n          year\n          label\n          embed {\n            embed\n          }\n        }\n      }\n    }\n    allContentfulMe(filter: {contentful_id: {eq: \"UBWBtTQcJcEJ4madRTVQh\"}}) {\n      edges {\n        node {\n          name\n          intro {\n            intro\n          }\n          tagline\n          email\n        }\n      }\n    }\n  }\n`\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["ContactMe","React","Container","fluid","className","Row","Col","lg","md","Button","bsPrefix","href","_ref","projects","slice","map","_ref2","node","ProjectPreview","project","data","name","sm","intro","iframe","LazyLoadingEmbed","embed","album","isVisible","setIsVisible","useState","iframeRef","useRef","useEffect","observer","IntersectionObserver","entry","isIntersecting","disconnect","threshold","current","observe","unobserve","embedSplit","split","formattedSrcUrl","find","string","startsWith","ref","styles","title","width","height","src","seamless","band","label","year","categories","category","index","key","color","length","Homepage","location","siteTitle","site","siteMetadata","allContentfulProject","edges","greg","allContentfulMe","Layout","pathname","HomepageHero","FeaturedProjects","pageQuery","as","variant","size","active","disabled","props","prefix","buttonProps","tagName","Component","displayName"],"sourceRoot":""}